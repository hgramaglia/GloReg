
b   = true,
x   = 0,
w   = 0,
y   = 0,
fib = (\().\x . if (==0)^b x then (x,1^w,1^y) else (let (x,w,y) = fib () ((-1)^x x) in (x,id^w(y),(w +^y y))))
------------------------------------
fib () (30^x)
------------------------------------

------------------------------------
b   : b bool,
x   : x int,
w   : w int,
y   : y int,
fib : lo \x.x int ->(b,x,w,y) (x int,w int,y int)
------------------------------------
(x int,w int,y int)
------------------------------------



fib = (\x . if (==0) x then (x,1,1) else (let (x,w,y) = fib ((-1) x) in (x,id(y),(w+y))))
------------------------------------
fib (30)
------------------------------------
==0 : x int-> lo bool,
1   : w int,
1   : y int,
-1  : x int-> x int,
id  : y int-> w int,
+   : (w int,y int)-> y int,
30  : lo int
------------------------------------
fib : \x:lo int.(x int,w int,y int)
------------------------------------
(lo int,w int,y int)
------------------------------------



