


x = 10,
b = true,
fib = (\().\(x,b) . if (==0)^b x then (x,1^lo,1^lo) else (let (x,w,r) = fib () ((-1)^x x,b) in (x,r,(w +^lo r))))
------------------------------------
fib () (x,b)
------------------------------------
 
------------------------------------
x : x int,
b : b bool,
fib : lo \(x,b).(x int,b bool) ->(x,b) (x int,lo int,lo int)
------------------------------------
(x int,lo int,lo int)
------------------------------------

Original:
x   = 10,
fib = (\x . if (==0) x then (x,1,1) else (let (x,w,r) = fib ((-1) x) in (x,r,(w+r))))
------------------------------------
fib (x)
------------------------------------
==0 : x int-> lo bool,
1   : lo int,
1   : lo int,
-1  : x int-> x int,
+   : (lo int,lo int)-> lo int
------------------------------------
x   : x int,
fib : \x:lo int.(x int,lo int,lo int)
------------------------------------
(x int,lo int,lo int)
------------------------------------
